{"version":3,"sources":["components/Login.js","components/Index.js","App.js","reportWebVitals.js","index.js"],"names":["Login","history","useHistory","useState","userName","setuserName","passWord","setpassWord","error","setError","status","setStatus","className","autoComplete","onSubmit","e","preventDefault","console","log","username","password","axios","get","then","response","b","data","isUser","catch","x","localStorage","setItem","JSON","stringify","push","LoginApi","type","placeholder","required","onChange","target","value","Index","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAqDeA,EAjDD,WACV,IAAIC,EAAUC,cACd,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAyBJ,mBAAS,IAAlC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA2BN,mBAAS,GAApC,mBAAOO,EAAP,KAAcC,EAAd,KA+BA,OACI,sBAAKC,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAf,mBACW,KAAVJ,EAAe,GAAG,qBAAKI,UAAU,cAAf,SAA8BJ,IACjD,uBAAMK,aAAa,MAAMC,SAXd,SAACC,GAChBA,EAAEC,iBACFC,QAAQC,IAAId,GACZa,QAAQC,IAAIZ,GAzBC,SAACa,EAAUC,GASxB,GARAC,IAAMC,IAAN,qDAAwDlB,IAAYmB,MAAK,SAACC,GACtE,IACMC,EADKD,EAASE,KACL,GAAGC,SAAWP,EAAW,EAAI,EAC5CT,EAAUc,MAEbG,OAAM,SAACpB,GACJG,EAAU,MAEXD,EAAO,CACN,IAAImB,EAAI,CAAC,SAAWzB,EAAU,SAAWE,GACzCW,QAAQC,IAAIW,GACZC,aAAaC,QAAQ,OAAOC,KAAKC,UAAUJ,IAC3C5B,EAAQiC,KAAK,cAGbzB,EAAS,uBACTJ,EAAY,IACZE,EAAY,IAQhB4B,CAAS/B,EAAUE,IAOf,UACI,uBAAO8B,KAAK,OAAOxB,UAAU,iBAAiByB,YAAY,YAAYC,UAAQ,EAACC,SAAU,SAACxB,GAAD,OAAKV,EAAYU,EAAEyB,OAAOC,QAAQA,MAAOrC,IAClI,uBAAOgC,KAAK,WAAWxB,UAAU,iBAAiByB,YAAY,WAAWC,UAAQ,EAACC,SAAU,SAACxB,GAAD,OAAKR,EAAYQ,EAAEyB,OAAOC,QAAQA,MAAOnC,IACrI,uBAAO8B,KAAK,SAASxB,UAAU,eAAe6B,MAAM,iBCrCrDC,EARD,WACV,OACI,8BACI,gD,QCmBGC,MAnBf,WACE,OACE,cAAC,IAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACA,qBAAKjC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,UAIJ,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,YCLOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b714becc.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport './Login.css'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nconst Login = () => {\n    let history = useHistory();\n    const [userName,setuserName] = useState('');\n    const [passWord,setpassWord] = useState('');\n    const [error,setError] = useState('');\n    const [status,setStatus] = useState(0);\n\n    const LoginApi = (username, password) => {\n        axios.get(`https://retoolapi.dev/0aMTU0/data?fullName=${userName}`).then((response) => {\n            let data = response.data;\n            const b = data[0].isUser === password ? 1 : 0;\n            setStatus(b);\n        })\n        .catch((error) => {\n            setStatus(0);\n        })\n        if(status){\n            let x = {'username':userName, 'password':passWord};\n            console.log(x);\n            localStorage.setItem('data',JSON.stringify(x));\n            history.push('index');\n        }\n        else{\n            setError(\"Invalid Credentials\");\n            setuserName(\"\");\n            setpassWord(\"\");\n        }\n    }\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        console.log(userName);\n        console.log(passWord);\n        LoginApi(userName, passWord);\n    }\n    \n    return (\n        <div className=\"login-card\">\n            <div className=\"login-head\">Login</div>\n            {error === \"\" ? \"\":<div className=\"login-error\">{error}</div>}\n            <form autoComplete=\"off\" onSubmit={submitForm}>\n                <input type=\"text\" className=\"login-username\" placeholder=\"User Name\" required onChange={(e)=>setuserName(e.target.value)} value={userName}/>\n                <input type=\"password\" className=\"login-password\" placeholder=\"Password\" required onChange={(e)=>setpassWord(e.target.value)} value={passWord}/>\n                <input type=\"submit\" className=\"login-submit\" value=\"Login\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react'\n\nconst Index = () => {\n    return (\n        <div>\n            <h1>Welcome !!!</h1>\n        </div>\n    )\n}\n\nexport default Index;\n","import './App.css';\nimport Login from './components/Login';\nimport Index from './components/Index';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Login />\n        </header>\n     </div>\n      </Route>\n      <Route exact path=\"/index\">\n        <Index />\n      </Route>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}